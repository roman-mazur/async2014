buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'com.stanfy.helium:gradle-plugin:0.5.3'
    classpath 'com.android.tools.build:gradle:0.13.2'
    classpath 'com.stanfy.android:gradle-android-apt:1.0.0'
  }
}

apply plugin: 'com.android.application'
apply plugin: 'helium-android'
apply plugin: 'com.stanfy.android.apt'

repositories {
  mavenCentral()
  maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

dependencies {
  compile 'com.android.support:support-v4:20.0.0'
  compile 'com.netflix.rxjava:rxjava-core:0.20.4'

  // we interact with Twitter via Retrofit (interface generated with Helium)
  compile 'com.google.code.gson:gson:2.2.4'
  compile 'com.squareup.retrofit:retrofit:1.6.1'

  // we control fetching data from Twitter via a Loader
  compile 'com.stanfy.enroscar:enroscar-async:2.0-RC1@aar'
  provided 'com.stanfy.enroscar:enroscar-async-compiler:2.0-RC1'
  // and do Loader interactions with RxJava
  compile 'com.stanfy.enroscar:enroscar-async-rx:2.0-RC1@aar'

  // fetch operations are run within a Service context
  compile 'com.stanfy.enroscar:enroscar-goro:2.0.0@aar'
}

android {
  compileSdkVersion 19
  buildToolsVersion "19.1.0"

  defaultConfig {
    minSdkVersion 14
    targetSdkVersion 19
  }

  lintOptions {
    ignore 'InvalidPackage' // avoid complains about annotation processor classes
  }
}

import javax.lang.model.element.Modifier
import static com.stanfy.helium.handler.codegen.java.entity.Writers.*;

helium {
  specification(file('src/main/api/twitter.api')) {
    sourceGen {
      entities {
        options {
          packageName = "enroscar.async.example.api"
          prettifyNames =  true
          fieldModifiers = EnumSet.of(Modifier.PRIVATE)
          addGetters = true
          writerWrapper = gson()
        }
      }
      retrofit {
        options {
          packageName = "enroscar.async.example.api"
        }
      }
    }
  }
}

task gradleWrapper(type: Wrapper) {
  gradleVersion = 1.12
}
